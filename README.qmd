---
format: gfm
---

# geoarrowrs

`{geoarrowrs}` provides R bindings to the geoarrow-rs Rust crate. They are in a very early stage. 

## Usage

The flatgeobuf reader is approximately 4 times faster than `sf` in this use case. 

```{r}
library(geoarrow)
library(geoarrowrs)

# get the file path
fp <- system.file("extdata", "osm-edinburgh-central.fgb", package = "geoarrowrs")

# read the flatgeobuf file
stream <- read_flatgeobuf_(fp)
stream

# convert to a record batch reader
reader <- arrow::as_record_batch_reader(stream)
reader 

# convert to sf 
sf::st_as_sf(reader) |> 
    dplyr::glimpse()
```

## Readers

- [x] FlatGeoBuf
- [x] GeoJson
- [x] GeoJsonLines
- [x] GeoParquet ⚠️ Not all options implemented
- [x] Shapefile
- [ ] wkb - going to defer to `geoarrow-r`
- [ ] wkt - going to defer to `geoarrow-r`

## Writers 

- [ ] FlatGeoBuf
- [ ] GeoJson
- [ ] GeoJsonLines
- [x] GeoParquet ⚠️ Not all options implemented
- [ ] Shapefile
- [ ] wkb - going to defer to `geoarrow-r`
- [ ] wkt - going to defer to `geoarrow-r`

## Algorithm Implementations: 

### Geo

- [ ] AffineOps
- [x] Area
- [x] BoundingRect
- [x] Center
- [x] Centroid
- [x] ChaikinSmoothing
- [x] ChamberlainDuquetteArea
- [x] ConcaveHull
- [x] Contains
- [x] ConvexHull
- [x] Densify
- [ ] EuclideanDistance
- [x] EuclideanLength
- [ ] FrechetDistance
- [ ] FrechetDistanceLineString
- [x] GeodesicArea
- [x] GeodesicLength
- [x] HasDimensions
- [x] HaversineLength
- [x] InteriorPoint
- [ ] Intersects
- [ ] LineInterpolatePoint
- [ ] LineLocatePoint
- [ ] LineLocatePointScalar
- [x] MinimumRotatedRect
- [x] RemoveRepeatedPoints
- [ ] Rotate
- [ ] Scale
- [ ] Simplify
- [ ] SimplifyVw
- [ ] SimplifyVwPreserve
- [ ] Skew
- [ ] Translate
- [x] VincentyLength
- [ ] Within

### Native 

- [ ] Binary
- [ ] Cast
- [ ] Concatenate
- [ ] Downcast
- [ ] DowncastTable
- [ ] Explode
- [ ] ExplodeTable
- [ ] MapChunks
- [ ] MapCoords
- [ ] Rechunk
- [ ] Take
- [ ] TotalBounds
- [ ] TypeIds
- [ ] Unary
- [ ] UnaryPoint

### rstar

- [ ] RTree

### geo_index

- [ ] RTree